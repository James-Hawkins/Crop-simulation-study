* scen.prms.lf[scen.prms.lf$land == f & scen.prms.lf$scen == s & scen.prms.lf$aez == aez , 'delta.lf']
)
}
}
}
View(lf.d)
View(dmi.d)
View(dmi.d)
sarid <- read_excel("Land_use_parameters.xlsx" , sheet = 'Sarid')
thsh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THSH')
sh <- read_excel("Land_use_parameters.xlsx" , sheet = 'SH')
thh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THH')
sarid <- as.data.frame(sarid)
thsh <- as.data.frame(thsh)
sh <- as.data.frame(sh)
thh <- as.data.frame(thh)
sarid.dmi <- sarid[1:5,c(1,2)]
thsh.dmi <- thsh[1:5,c(1,2)]
sh.dmi <- sh[1:5,c(1,2)]
thh.dmi <- thh[1:5,c(1,2)]
sarid.lf <- sarid[12:15,c(5 , 10 , 11)]
thsh.lf <- thsh[12:15,c(5 , 10 , 11)]
sh.lf <- sh[12:15,c(5 , 10 , 11)]
thh.lf <- thh[12:15,c(5 , 10 , 11)]
sarid.dmi$aez <- 'SA'
thsh.dmi$aez <- 'THSH'
sh.dmi$aez <-  'SH'
thh.dmi$aez <-  'THH'
sarid.lf$aez <- 'SA'
thsh.lf$aez <- 'THSH'
sh.lf$aez <-  'SH'
thh.lf$aez <-  'THH'
dmi.d.0 <- rbind(sarid.dmi , thsh.dmi , sh.dmi , thh.dmi)
lf.d.0 <- rbind(sarid.lf , thsh.lf , sh.lf , thh.lf)
#View(dmi.d.0)
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi'
# Replace grazing + collected fodder with 'native grass'
dmi.d.0$dmi.n <- NA
for (aez in unique(dmi.d.0$aez)) {
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi.n'] <- (
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi'] +
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == "Collected fodder", 'dmi' ]
)
}
dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi.n'] <-  dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi']
dmi.d.0$dmi <- dmi.d.0$dmi.n
dmi.d.0 <- dmi.d.0[ , -4]
View(dmi.d.0)
# Rename columns of dataframes
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi.pct'
names(lf.d.0)[1] <- 'land'
names(lf.d.0)[2] <- 'lf.pct'
names(lf.d.0)[3] <- 'lf.act'
lf.d.0$lf.pct <- as.numeric(lf.d.0$lf.pct)
lf.d.0$lf.act <- as.numeric(lf.d.0$lf.act)
# Add additional rows for scenario parameters here
lf.d.0$scen <- 'Baseline'
dmi.d.0$scen <- 'Baseline'
lf.d.s1 <- lf.d.0
lf.d.s2 <- lf.d.0
lf.d.s3 <- lf.d.0
lf.d.s4 <- lf.d.0
dmi.d.s1 <- dmi.d.0
dmi.d.s2 <- dmi.d.0
dmi.d.s3 <- dmi.d.0
dmi.d.s4 <- dmi.d.0
lf.d.s1$scen <- 'scen 1'
lf.d.s2$scen <- 'scen 2'
lf.d.s3$scen <- 'scen 3'
lf.d.s4$scen <- 'scen 4'
dmi.d.s1$scen <- 'scen 1'
dmi.d.s2$scen <- 'scen 2'
dmi.d.s3$scen <- 'scen 3'
dmi.d.s4$scen <- 'scen 4'
lf.d <- rbind( lf.d.0 , lf.d.s1 , lf.d.s2 , lf.d.s3 , lf.d.s4 )
dmi.d <- rbind( dmi.d.0 , dmi.d.s1 , dmi.d.s2 , dmi.d.s3 , dmi.d.s4 )
View(lf.d)
View(dmi.d)
colnames(dmi.d)
# Define scenarios as % change from baseline parameters (feed, land footprint)
scen.prms.dm <- read_excel("Scenario_params.xlsx" , sheet = 'Feeding')
scen.prms.lf <- read_excel("Scenario_params.xlsx" , sheet = 'Land.footprint')
scen.prms.dm <- as.data.frame(scen.prms.dm)
scen.prms.lf <- as.data.frame(scen.prms.lf)
unique.scens <- unique(scen.prms.dm$scen)
unique.feeds <- unique(scen.prms.dm$feed)
unique.lands <- unique(scen.prms.lf$land)
unique.aezs <- unique(scen.prms$aez)
View(dmi.d)
View(lf.d)
View(dmi.d.0)
sarid <- read_excel("Land_use_parameters.xlsx" , sheet = 'Sarid')
thsh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THSH')
sh <- read_excel("Land_use_parameters.xlsx" , sheet = 'SH')
thh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THH')
sarid <- as.data.frame(sarid)
thsh <- as.data.frame(thsh)
sh <- as.data.frame(sh)
thh <- as.data.frame(thh)
sarid.dmi <- sarid[1:5,c(1,2)]
thsh.dmi <- thsh[1:5,c(1,2)]
sh.dmi <- sh[1:5,c(1,2)]
thh.dmi <- thh[1:5,c(1,2)]
sarid.lf <- sarid[12:15,c(5 , 10 , 11)]
thsh.lf <- thsh[12:15,c(5 , 10 , 11)]
sh.lf <- sh[12:15,c(5 , 10 , 11)]
thh.lf <- thh[12:15,c(5 , 10 , 11)]
sarid.dmi$aez <- 'SA'
thsh.dmi$aez <- 'THSH'
sh.dmi$aez <-  'SH'
thh.dmi$aez <-  'THH'
sarid.lf$aez <- 'SA'
thsh.lf$aez <- 'THSH'
sh.lf$aez <-  'SH'
thh.lf$aez <-  'THH'
dmi.d.0 <- rbind(sarid.dmi , thsh.dmi , sh.dmi , thh.dmi)
lf.d.0 <- rbind(sarid.lf , thsh.lf , sh.lf , thh.lf)
#View(dmi.d.0)
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi'
# Replace grazing + collected fodder with 'native grass'
dmi.d.0$dmi.n <- NA
for (aez in unique(dmi.d.0$aez)) {
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi.n'] <- (
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi'] +
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == "Collected fodder", 'dmi' ]
)
}
View(dmi.d.0)
dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi.n'] <-  dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi']
dmi.d.0$dmi <- dmi.d.0$dmi.n
View(dmi.d.0)
dmi.d.0 <- dmi.d.0[ , -4]
View(dmi.d.0)
# Rename columns of dataframes
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi.pct'
names(lf.d.0)[1] <- 'land'
names(lf.d.0)[2] <- 'lf.pct'
names(lf.d.0)[3] <- 'lf.act'
lf.d.0$lf.pct <- as.numeric(lf.d.0$lf.pct)
lf.d.0$lf.act <- as.numeric(lf.d.0$lf.act)
# Add additional rows for scenario parameters here
lf.d.0$scen <- 'Baseline'
dmi.d.0$scen <- 'Baseline'
lf.d.s1 <- lf.d.0
lf.d.s2 <- lf.d.0
lf.d.s3 <- lf.d.0
lf.d.s4 <- lf.d.0
dmi.d.s1 <- dmi.d.0
dmi.d.s2 <- dmi.d.0
dmi.d.s3 <- dmi.d.0
dmi.d.s4 <- dmi.d.0
lf.d.s1$scen <- 'scen 1'
lf.d.s2$scen <- 'scen 2'
lf.d.s3$scen <- 'scen 3'
lf.d.s4$scen <- 'scen 4'
dmi.d.s1$scen <- 'scen 1'
dmi.d.s2$scen <- 'scen 2'
dmi.d.s3$scen <- 'scen 3'
dmi.d.s4$scen <- 'scen 4'
lf.d <- rbind( lf.d.0 , lf.d.s1 , lf.d.s2 , lf.d.s3 , lf.d.s4 )
dmi.d <- rbind( dmi.d.0 , dmi.d.s1 , dmi.d.s2 , dmi.d.s3 , dmi.d.s4 )
View(lf.d)
View(dmi.d)
View(dmi.d)
View(dmi.d.0)
dmi.d.0[ !(dmi.d.0$feed == 'Collected fodder') , 'dmi.n']
dmi.d.0[ !(dmi.d.0$feed == 'Collected fodder') , ]
dmi.d.0 <- dmi.d.0[ !(dmi.d.0$feed == 'Collected fodder') , ]
View(dmi.d.0)
sarid <- read_excel("Land_use_parameters.xlsx" , sheet = 'Sarid')
thsh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THSH')
sh <- read_excel("Land_use_parameters.xlsx" , sheet = 'SH')
thh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THH')
sarid <- as.data.frame(sarid)
thsh <- as.data.frame(thsh)
sh <- as.data.frame(sh)
thh <- as.data.frame(thh)
sarid.dmi <- sarid[1:5,c(1,2)]
thsh.dmi <- thsh[1:5,c(1,2)]
sh.dmi <- sh[1:5,c(1,2)]
thh.dmi <- thh[1:5,c(1,2)]
sarid.lf <- sarid[12:15,c(5 , 10 , 11)]
thsh.lf <- thsh[12:15,c(5 , 10 , 11)]
sh.lf <- sh[12:15,c(5 , 10 , 11)]
thh.lf <- thh[12:15,c(5 , 10 , 11)]
sarid.dmi$aez <- 'SA'
thsh.dmi$aez <- 'THSH'
sh.dmi$aez <-  'SH'
thh.dmi$aez <-  'THH'
sarid.lf$aez <- 'SA'
thsh.lf$aez <- 'THSH'
sh.lf$aez <-  'SH'
thh.lf$aez <-  'THH'
dmi.d.0 <- rbind(sarid.dmi , thsh.dmi , sh.dmi , thh.dmi)
lf.d.0 <- rbind(sarid.lf , thsh.lf , sh.lf , thh.lf)
#View(dmi.d.0)
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi'
# Replace grazing + collected fodder with 'native grass'
dmi.d.0$dmi.n <- NA
for (aez in unique(dmi.d.0$aez)) {
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi.n'] <- (
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi'] +
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == "Collected fodder", 'dmi' ]
)
}
dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi.n'] <-  dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi']
dmi.d.0 <- dmi.d.0[ !(dmi.d.0$feed == 'Collected fodder') , ]
View(dmi.d.0)
sarid <- read_excel("Land_use_parameters.xlsx" , sheet = 'Sarid')
thsh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THSH')
sh <- read_excel("Land_use_parameters.xlsx" , sheet = 'SH')
thh <- read_excel("Land_use_parameters.xlsx" , sheet = 'THH')
sarid <- as.data.frame(sarid)
thsh <- as.data.frame(thsh)
sh <- as.data.frame(sh)
thh <- as.data.frame(thh)
sarid.dmi <- sarid[1:5,c(1,2)]
thsh.dmi <- thsh[1:5,c(1,2)]
sh.dmi <- sh[1:5,c(1,2)]
thh.dmi <- thh[1:5,c(1,2)]
sarid.lf <- sarid[12:15,c(5 , 10 , 11)]
thsh.lf <- thsh[12:15,c(5 , 10 , 11)]
sh.lf <- sh[12:15,c(5 , 10 , 11)]
thh.lf <- thh[12:15,c(5 , 10 , 11)]
sarid.dmi$aez <- 'SA'
thsh.dmi$aez <- 'THSH'
sh.dmi$aez <-  'SH'
thh.dmi$aez <-  'THH'
sarid.lf$aez <- 'SA'
thsh.lf$aez <- 'THSH'
sh.lf$aez <-  'SH'
thh.lf$aez <-  'THH'
dmi.d.0 <- rbind(sarid.dmi , thsh.dmi , sh.dmi , thh.dmi)
lf.d.0 <- rbind(sarid.lf , thsh.lf , sh.lf , thh.lf)
#View(dmi.d.0)
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi'
# Replace grazing + collected fodder with 'native grass'
dmi.d.0$dmi.n <- NA
for (aez in unique(dmi.d.0$aez)) {
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi.n'] <- (
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == 'Grazing', 'dmi'] +
dmi.d.0[dmi.d.0$aez == aez & dmi.d.0$feed == "Collected fodder", 'dmi' ]
)
}
View(dmi.d.0)
dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi.n'] <-  dmi.d.0[dmi.d.0$feed != 'Grazing' , 'dmi']
dmi.d.0 <- dmi.d.0[ !(dmi.d.0$feed == 'Collected fodder') , ]
dmi.d.0$dmi <- dmi.d.0$dmi.n
dmi.d.0 <- dmi.d.0[ , -4]
View(dmi.d.0)
# Rename columns of dataframes
names(dmi.d.0)[1] <- 'feed'
names(dmi.d.0)[2] <- 'dmi.pct'
names(lf.d.0)[1] <- 'land'
names(lf.d.0)[2] <- 'lf.pct'
names(lf.d.0)[3] <- 'lf.act'
lf.d.0$lf.pct <- as.numeric(lf.d.0$lf.pct)
lf.d.0$lf.act <- as.numeric(lf.d.0$lf.act)
# Add additional rows for scenario parameters here
lf.d.0$scen <- 'Baseline'
dmi.d.0$scen <- 'Baseline'
lf.d.s1 <- lf.d.0
lf.d.s2 <- lf.d.0
lf.d.s3 <- lf.d.0
lf.d.s4 <- lf.d.0
dmi.d.s1 <- dmi.d.0
dmi.d.s2 <- dmi.d.0
dmi.d.s3 <- dmi.d.0
dmi.d.s4 <- dmi.d.0
lf.d.s1$scen <- 'scen 1'
lf.d.s2$scen <- 'scen 2'
lf.d.s3$scen <- 'scen 3'
lf.d.s4$scen <- 'scen 4'
dmi.d.s1$scen <- 'scen 1'
dmi.d.s2$scen <- 'scen 2'
dmi.d.s3$scen <- 'scen 3'
dmi.d.s4$scen <- 'scen 4'
lf.d <- rbind( lf.d.0 , lf.d.s1 , lf.d.s2 , lf.d.s3 , lf.d.s4 )
dmi.d <- rbind( dmi.d.0 , dmi.d.s1 , dmi.d.s2 , dmi.d.s3 , dmi.d.s4 )
# Define scenarios as % change from baseline parameters (feed, land footprint)
scen.prms.dm <- read_excel("Scenario_params.xlsx" , sheet = 'Feeding')
scen.prms.lf <- read_excel("Scenario_params.xlsx" , sheet = 'Land.footprint')
scen.prms.dm <- as.data.frame(scen.prms.dm)
scen.prms.lf <- as.data.frame(scen.prms.lf)
unique.scens <- unique(scen.prms.dm$scen)
unique.feeds <- unique(scen.prms.dm$feed)
unique.lands <- unique(scen.prms.lf$land)
unique.aezs <- unique(scen.prms$aez)
for (s in unique.scens) {
for (f in unique.feeds) {
for (aez in unique.aezs) {
dmi.d[dmi.d$feed == f & dmi.d$scen == s & dmi.d$aez == aez, 'dmi.pct'] <- (
dmi.d[dmi.d$feed == f & dmi.d$scen == 'Baseline' & dmi.d$aez == aez, 'dmi.pct']
* scen.prms.dm[scen.prms.dm$feed == f & scen.prms.dm$scen == s & scen.prms.dm$aez == aez , 'delta.feed.dmi']
)
#lf.d[lf.d$feed == f & lf.d$scen == s & lf.d$aez == aez, 'lf.pct'] <- (
# lf.d[lf.d$feed == f & lf.d$scen == 'Baseline' & lf.d$aez == aez, 'lf.pct']
#  * scen.prms[scen.prms$feed == f & scen.prms$scen == s & scen.prms$aez == aez , 'delta.lf']
#)
}
}
}
for (s in unique.scens) {
for (f in unique.lands) {
for (aez in unique.aezs) {
#   dmi.d[dmi.d$feed == f & dmi.d$scen == s & dmi.d$aez == aez, 'dmi.pct'] <- (
#    dmi.d[dmi.d$feed == f & dmi.d$scen == 'Baseline' & dmi.d$aez == aez, 'dmi.pct']
#    * scen.prms.dm[scen.prms.dm$feed == f & scen.prms.dm$scen == s & scen.prms.dm$aez == aez , 'delta.feed.dmi']
#  )
lf.d[lf.d$land == f & lf.d$scen == s & lf.d$aez == aez, 'lf.pct'] <- (
lf.d[lf.d$land == f & lf.d$scen == 'Baseline' & lf.d$aez == aez, 'lf.pct']
* scen.prms.lf[scen.prms.lf$land == f & scen.prms.lf$scen == s & scen.prms.lf$aez == aez , 'delta.lf']
)
}
}
}
View(dmi.d)
View(lf.d)
View(dmi.d)
feed.levels <- c(
"Crop residue"
, "Concentrate/purchased"
,"Cultivated fodder"
,"Grazing"
,  "Collected fodder"
)
land.levels <- c(
'Maize as residue'
,'Maize as concentrate'
,'Improved forage'
,'Native grass'
)
dmi.d$feed <- factor (dmi.d$feed  , levels = feed.levels)
lf.d$land <- factor (lf.d$land  , levels = land.levels)
color.scale <-  c(
'black'
, 'blue'
, 'red'
, 'green'
,'pink'
)
dmi.p.0 <- ggplot( dmi.d  , aes(x = aez , y = dmi.pct , fill = feed) ) +
geom_bar(position="stack", stat="identity") +
ylab('Dry matter intake (%)') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
, axis.title.x = element_blank()
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
, axis.text.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="none" )
lf.pct.p.0 <- ggplot( lf.d  , aes(x = aez , y = lf.pct , fill = land) ) +
geom_bar(position="fill" , stat = "identity") +
ylab('Land footprint (%)') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
, axis.title.x = element_blank()
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
, axis.text.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="none" )
lf.act.0 <- ggplot( lf.d  , aes( fill = land , x = aez ,  y = lf.act ) ) +
geom_bar( stat = 'identity') +
ylab('Land footprint (ha/TLU') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
axis.text.x = element_text(angle = 90, face = 'italic' , vjust = 0.5, hjust=1, size = 9.5 )
, axis.title.x = element_text(size = 9.5 )
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="bottom" ) +
label.fs <- 12
lf.pct.p.0 <- ggplot( lf.d  , aes(x = aez , y = lf.pct , fill = land) ) +
geom_bar(position="fill" , stat = "identity") +
ylab('Land footprint (%)') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
, axis.title.x = element_blank()
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
, axis.text.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="none" )
lf.act.0 <- ggplot( lf.d  , aes( fill = land , x = aez ,  y = lf.act ) ) +
geom_bar( stat = 'identity') +
ylab('Land footprint (ha/TLU') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
axis.text.x = element_text(angle = 90, face = 'italic' , vjust = 0.5, hjust=1, size = 9.5 )
, axis.title.x = element_text(size = 9.5 )
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="bottom" ) +
label.fs <- 12
ggplot( lf.d  , aes( fill = land , x = aez ,  y = lf.act ) ) +
geom_bar( stat = 'identity') +
ylab('Land footprint (ha/TLU') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen)
lf.act.0 <- ggplot( lf.d  , aes( fill = land , x = aez ,  y = lf.act ) ) +
geom_bar( stat = 'identity') +
ylab('Land footprint (ha/TLU') +
xlab('Agro-ecolocical zone') +
scale_fill_manual(values = color.scale) +
facet_grid( ~ scen) +
theme(
axis.text.x = element_text(angle = 90, face = 'italic' , vjust = 0.5, hjust=1, size = 9.5 )
, axis.title.x = element_text(size = 9.5 )
, axis.title.y = element_text(size = 9.5 )
, axis.ticks.x = element_blank()
# Panel
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.background = element_blank()
,panel.border = element_rect(colour = "black",
fill=NA, size=1)
,  legend.position="bottom" )
label.fs <- 12
dmi.p  <<- annotate_figure( dmi.p.0 ,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
lf.pct.p  <<- annotate_figure(lf.pct.p.0 ,   fig.lab = "b", fig.lab.pos ="top.left", fig.lab.size = label.fs)
lf.act  <<- annotate_figure( lf.act.0 ,   fig.lab = "c", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.all   <<- plot_grid(   dmi.p ,
lf.pct.p  ,
lf.act ,
align = "h",
nrow = 3,
ncol = 1 ,
rel_heights = c(25/100, 25/100 , 50/100))
library(ggpubr)
fig.all   <<- plot_grid(   dmi.p ,
lf.pct.p  ,
lf.act ,
align = "h",
nrow = 3,
ncol = 1 ,
rel_heights = c(25/100, 25/100 , 50/100))
library(readxl)
library(ggplot2)
library(ggpubr)
fig.all   <<- plot_grid(   dmi.p ,
lf.pct.p  ,
lf.act ,
align = "h",
nrow = 3,
ncol = 1 ,
rel_heights = c(25/100, 25/100 , 50/100))
dmi.p  <<- annotate_figure( dmi.p.0 ,   fig.lab = "a", fig.lab.pos ="top.left", fig.lab.size = label.fs)
lf.pct.p  <<- annotate_figure(lf.pct.p.0 ,   fig.lab = "b", fig.lab.pos ="top.left", fig.lab.size = label.fs)
lf.act  <<- annotate_figure( lf.act.0 ,   fig.lab = "c", fig.lab.pos ="top.left", fig.lab.size = label.fs)
fig.all   <<- plot_grid(   dmi.p ,
lf.pct.p  ,
lf.act ,
align = "h",
nrow = 3,
ncol = 1 ,
rel_heights = c(25/100, 25/100 , 50/100))
fig.all
library(cowplot)
fig.all   <<- plot_grid(   dmi.p ,
lf.pct.p  ,
lf.act ,
align = "h",
nrow = 3,
ncol = 1 ,
rel_heights = c(25/100, 25/100 , 50/100))
fig.all
